<!-- RadarGun 3.0 benchmark -->
<benchmark xmlns="urn:radargun:benchmark:3.0">

    <!-- Specifies where should the master open socket  -->
    <master bindAddress="${master.address:127.0.0.1}" port="${master.port:2103}"/>

    <!-- List of cluster configurations where the benchmark should run-->
    <clusters>
        <!-- Equivalent to <cluster size="2" /><cluster size="3" /><cluster size="4" /> -->
        <scale from="5" to="${slaves:5}" inc="1">
            <!-- No groups defined within the cluster -->
            <cluster>
                <group name="g1" size="2"/>
                <group name="g2" size="3"/>
            </cluster>
        </scale>
    </clusters>

    <!-- List of configurations of the services -->
    <configurations>
        <config name="Infinispan 7.0 - distributed">
            <setup plugin="infinispan70" group="g1">
                <embedded xmlns="urn:radargun:plugins:infinispan70:3.0"
                          file="dist-no-tx_site1.xml"
                          cache="testCacheSite1" />
            </setup>
            <setup plugin="infinispan70" group="g2">
                <embedded xmlns="urn:radargun:plugins:infinispan70:3.0"
                          file="dist-no-tx_site2.xml"
                          cache="testCacheSite2" />
            </setup>
        </config>
    </configurations>

    <!-- Sequence of stages executed on the cluster -->
    <rg:scenario xmlns:rg="urn:radargun:benchmark:3.0" xmlns="urn:radargun:stages:core:3.0">
        <service-start groups="g1"/>

        <!-- JMX method invocations with one string parameter specified. Return value check is performed. -->
        <jmx-invocation groups="g1" target-name="takeSiteOffline"
                        query="org.infinispan:type=Cache,name=&quot;testCacheSite1(dist_sync)&quot;,manager=&quot;default&quot;,component=XSiteAdmin"
                        method-signatures="java.lang.String" continue-on-failure="false" slaves="0">
            <expected-slave-result>
                <string value="ok" />
            </expected-slave-result>
            <method-parameters>
                <string value="SITE2"/>
            </method-parameters>
        </jmx-invocation>

        <cache-load num-entries="1000" groups="g1" key-id-offset="0">
            <cache-selector>
               <use-cache cache="testCacheSite1" />
            </cache-selector>
           <value-generator>
              <cache-aware-text cache-name="testCacheSite1" suffix="SITE1_ORIGINAL" />
           </value-generator>
        </cache-load>

        <xs-repl-check entry-size="-1" num-entries="1000" first-entry-offset="0" groups="g1">
           <value-generator>
              <cache-aware-text cache-name="testCacheSite1" suffix="SITE1_ORIGINAL" />
           </value-generator>
        </xs-repl-check>

        <service-start groups="g2"/>

        <jmx-invocation groups="g1" target-name="pushState"
                        query="org.infinispan:type=Cache,name=&quot;testCacheSite1(dist_sync)&quot;,manager=&quot;default&quot;,component=XSiteAdmin"
                        method-signatures="java.lang.String" continue-on-failure="false" slaves="0">
            <expected-slave-result>
                <string value="ok" />
            </expected-slave-result>
            <method-parameters>
                <string value="SITE2"/>
            </method-parameters>
        </jmx-invocation>

        <!-- Start data loading into 2 caches simultaneously. Note that cache names are included in inserted values -->
        <background-cache-load-start num-entries="1000" groups="g1" key-id-offset="1000">
           <cache-selector>
              <use-cache cache="testCacheSite1"/>
           </cache-selector>
           <value-generator>
              <cache-aware-text cache-name="testCacheSite1" suffix="SITE1_UPDATE" />
           </value-generator>
        </background-cache-load-start>

        <background-cache-load-start num-entries="400" groups="g1" key-id-offset="300"
                                    request-period="75">
           <cache-selector>
              <use-cache cache="testCacheSite1"/>
           </cache-selector>
           <value-generator>
              <cache-aware-text cache-name="testCacheSite1_backup" suffix="SITE1_BACKUP_UPDATE" />
           </value-generator>
        </background-cache-load-start>

        <!-- Registers value generator -->
        <background-cache-load-start num-entries="0" groups="g2">
            <cache-selector>
                <use-cache cache="testCacheSite1_backup"/>
            </cache-selector>
            <value-generator>
                <cache-aware-text cache-name="testCacheSite1_backup" suffix="SITE1_BACKUP_UPDATE" />
            </value-generator>
        </background-cache-load-start>

        <!-- Wait until data loading finishes -->
        <background-cache-load-stop />

        <sleep time="90s" />

        <!-- Check whether caches contain expected number of entries. Utilizes cache names specified in background-load-data-start -->
        <xs-repl-check entry-size="-1" num-entries="400" first-entry-offset="300" groups="g2"
                       ignore-sum="true">
            <value-generator>
                <cache-aware-text cache-name="testCacheSite1_backup" suffix="SITE1_BACKUP_UPDATE" />
            </value-generator>
        </xs-repl-check>
        <xs-repl-check entry-size="-1" num-entries="300" first-entry-offset="0" groups="g2"
                       ignore-sum="true">
            <value-generator>
                <cache-aware-text cache-name="testCacheSite1" suffix="SITE1_ORIGINAL" />
            </value-generator>
        </xs-repl-check>
        <xs-repl-check entry-size="-1" num-entries="300" first-entry-offset="700" groups="g2"
                       ignore-sum="true">
            <value-generator>
                <cache-aware-text cache-name="testCacheSite1" suffix="SITE1_ORIGINAL" />
            </value-generator>
        </xs-repl-check>
        <xs-repl-check entry-size="-1" num-entries="1000" first-entry-offset="1000" groups="g2"
                       ignore-sum="true">
            <value-generator>
                <cache-aware-text cache-name="testCacheSite1" suffix="SITE1_UPDATE" />
            </value-generator>
        </xs-repl-check>

        <!-- Check total number of entries in sites using jmx -->
        <jmx-invocation groups="g1" target-name="numberOfEntries"
                        query="org.infinispan:type=Cache,name=&quot;testCacheSite1(dist_sync)&quot;,manager=&quot;default&quot;,component=Statistics"
                        continue-on-failure="false" operation-type="GET_ATTRIBUTE_VALUE">
            <expected-total-result>
                <int value="4000" />
            </expected-total-result>
        </jmx-invocation>

        <jmx-invocation groups="g2" target-name="numberOfEntries"
                        query="org.infinispan:type=Cache,name=&quot;testCacheSite1_backup(dist_sync)&quot;,manager=&quot;default&quot;,component=Statistics"
                        continue-on-failure="false" operation-type="GET_ATTRIBUTE_VALUE">
            <expected-total-result>
                <int value="4000" />
            </expected-total-result>
        </jmx-invocation>

    </rg:scenario>

    <!-- No reports required for this scenario -->

</benchmark>
